def embaralhar():

    from random import choice
    cartas = ['A', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K']
    return choice(cartas)

def valor(cartas):

    tot = 0
    for c in cartas:
        if c == 'A':
            tot += 1
        elif c == 'J' or c == 'Q' or c == 'K':
            tot += 10
        else:
            tot += c

    return tot

def point_win(player_tot, dealer_tot):

    if player_tot < 21 and dealer_tot < 21:
        if 21 - player_tot < 21 - dealer_tot:
            return 'JOGADOR VENCEU'
        elif 21 - dealer_tot < 21 - player_tot:
            return 'DEALER VENCEU'

    elif player_tot > 21 and dealer_tot > 21:
        if player_tot - 21 < dealer_tot - 21:
            return 'JOGADOR VENCEU'
        elif dealer_tot - 21 < player_tot - 21:
            return 'DEALER VENCEU'

    else:
        if player_tot < 21 and dealer_tot > 21:
            return 'JOGADOR VENCEU'
        elif dealer_tot < 21 and player_tot > 21:
            return 'DEALER VENCEU'

def check_condition(cartas, valor):

    if 'A' in cartas and 'J' in cartas and len(cartas) == 2 or 'A' in cartas and 'Q' in cartas and len(cartas) == 2 or 'A' in cartas and 'K' in cartas and len(cartas) == 2:
        return 'BLACKJACK'

    elif valor == 21:
        return '21'

    elif valor < 17:
        return 'CONTINUAR'

    elif valor >= 17:
        return 'PARAR'

def card_win(player_condition, dealer_condition):

    if player_condition == 'BLACKJACK' or player_condition == '21':
        if dealer_condition == 'CONTINUAR' or dealer_condition == 'PARAR':
            return 'PLAYER WIN'

    elif dealer_condition == 'BLACKJACK' or dealer_condition == '21':
        if player_condition == 'CONTINUAR' or dealer_condition == 'PARAR':
            return 'DEALER WIN'

    elif player_condition == 'CONINUAR' or 'PARAR' and dealer_condition == 'CONTINUAR' or 'PARAR':
        return 'CONTINUE'

    else:
        return 'EMPATE'

player_cards = [embaralhar(), embaralhar()]
dealer_cards = [embaralhar(), embaralhar()]

from time import sleep

while True:
    sleep(2)
    player_tot = valor(player_cards)
    dealer_tot = valor(dealer_cards)

    player_test = check_condition(player_cards, player_tot)
    dealer_test = check_condition(dealer_cards, dealer_tot)

    print(f'\033[1;34mJogador: {player_cards} = {player_tot} & {player_test}\n\033[1;32mDealer: {dealer_cards[0]}\n')

    ####### VERIFICAÇÃO DAS CARTAS ######
    if card_win(player_test, dealer_test) == 'PLAYER WIN':
        print('\033[1;34mJOGADOR VENCEU')
        break
    elif card_win(player_test, dealer_test) == 'DEALER WIN':
        print('\033[1;32mDEALER VENCEU')
        break
    elif card_win(player_test, dealer_test) == 'EMPATE':
        print('\033[1;30mEMPATE')
        break
    ######################################

    if player_test == 'CONTINUAR':
        print('\033[1;30mÉ aconselhável comprar mais cartas...')

    if player_test == 'PARAR':
        print('\033[1;31mÉ aconselhável parar...')

    acao = str(input('\033[1;30mDeseja comprar mais uma carta(S/N)? ')).upper()

    if 'S' in acao:
        player_cards.append(embaralhar())

    if dealer_test == 'CONTINUAR':
        dealer_cards.append(embaralhar())
        print('\n\033[1;30mDealer está comprando...\n')
        sleep(2)

    if 'N' in acao and dealer_test != 'CONTINUAR':
        if point_win(player_tot, dealer_tot) == 'JOGADOR VENCEU':
            print('\033[1;34mJOGADOR VENCEU')
            break
        elif point_win(player_tot, dealer_tot) == 'DEALER VENCEU':
            print('\033[1;32mDEALER VENCEU')
            break

print(f'\n\033[1;34mJogador: {player_cards} = {player_tot} & {player_test}\n\033[1;32mDealer: {dealer_cards} = {dealer_tot} & {dealer_test}\n')
